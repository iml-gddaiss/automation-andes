# This playbook will create a singel lxc container to host a monolthic Andes stack
# The container is meant ot be used as a post-prod instaces for post-prod validation
# andes-web
# andes-db
# nginx-proxy
---

- hosts: '{{ host }}'
  connection: local
  tasks:


    - name: Print vars
      ansible.builtin.debug:
        msg:
          - "hotst: {{ host }}" 
          - "rw_user_name:{{ rw_user_name }}"
          - "rw_password: {{ rw_password }}"
          - "ro_user_name:{{ ro_user_name }}"
          - "ro_password: {{ ro_password }}"
          - "share_path: {{ share_path }}"

#### macvlan
    - name: write netplan conf from jinja2 template
      ansible.builtin.template:
        src: ../templates/networkshare.netplan.yaml.j2
        dest: /etc/netplan/50-cloud-init.yaml
        owner: root
        group: root
      notify: restart netplan

#### Samba
    - name: Install Samba apt requirements
      apt:
        update_cache: yes
        pkg: 
          - samba
        state: present

    - name: Create samba group
      group:
        name: "samba"
        state: "present"

    - name: Create rw and ro users
      user:
        name: "{{ item }}"
        shell: /sbin/nologin
        append: yes
        groups: samba
        create_home: no
      loop:
        - "{{ rw_user_name }}"
        - "{{ ro_user_name }}"

    - name: Create share directory
      file:
        path: "{{ share_path }}"
        state: directory
        owner: root
        group: samba
        mode: "2770"

    - name: add samba rw user password
      shell: "smbpasswd -s -a {{ rw_user_name }}"
      args:
        stdin: "{{ rw_password }}\n{{ rw_password }}"

    - name: add samba ro user password
      shell: "smbpasswd -s -a {{ ro_user_name }}"
      args:
        stdin: "{{ ro_password }}\n{{ ro_password }}"

    - name: config samba
      blockinfile:
        path: /etc/samba/smb.conf
        block: |
          [stockage]
            comment = Partage de fichier
            path = "{{ share_path }}"
            browsable = yes
            guest ok = no
            read only = yes
            create mask = 2754
            valid users = {{ rw_user_name }}, {{ ro_user_name }}
            write list = {{ rw_user_name }}
      notify: start smb service

    - name: Open firwall ports for Samba
      community.general.ufw:
          rule: allow
          name: Samba
          state: enabled

#### Apache
    - name: Install Apache2 apt requirements
      apt:
        update_cache: yes
        pkg: 
          - apache2
        state: present

    - name: Add samba group to www-data
      user:
        name: www-data
        shell: /sbin/nologin
        append: yes
        groups: samba
        create_home: no

    - name: Enable the Apache2 module headers (for cross-origin)
      community.general.apache2_module:
        state: present
        name: headers

    - name: write apache conf from jinja2 template
      ansible.builtin.template:
        src: ../templates/networkshare.apache2.conf.j2
        dest: /etc/apache2/sites-available/samba.conf
        owner: root
        group: root

    - name: Enable samba share
      shell: /usr/sbin/a2ensite samba.conf
      notify: Reload Apache

    - name: Disable default Apache site
      shell: /usr/sbin/a2dissite 000-default.conf
      notify: Reload Apache

    - name: Open firwall ports for http
      community.general.ufw:
        rule: allow
        port: 80
        state: enabled

  handlers:

    - name: restart netplan
      shell: netplan apply

    - name: start smb service
      service:
        name: smbd
        state: started

    - name: Reload Apache
      service:
        name: apache2
        state: reloaded
